const express = require('express');
const { body, validationResult } = require('express-validator');
const app = express();
const port = 3000;

app.use(express.json());

// Helper function to generate a random ID
function generateRandomId() {
    return Math.floor(Math.random() * (9999 - 1000 + 1)) + 1000;
}

// Event Schema:
/* 
{
    "id": 0000,
    "title": "",
    "time": "2024-10-05T14:00:00Z",
    "owner": "",
    "limit": 1,
    "description": "" 
    // address
    // attendies
    // pictures
    // chat
}
*/


// Event array with initial dummy data
let events = [
    {
        id: generateRandomId(),
        title: 'Community Cleanup',
        time: '2024-09-30T10:00:00Z',
        owner: 'Alice',
        limit: 50,
        description: 'A community event to clean up the park.'
    },
    {
        id: generateRandomId(),
        title: 'Tech Talk',
        time: '2024-10-05T14:00:00Z',
        owner: 'Bob',
        limit: 100,
        description: 'A talk on the latest in technology.'
    },
    {
        id: generateRandomId(),
        title: 'Food Festival',
        time: '2024-10-10T12:00:00Z',
        owner: 'Carol',
        limit: 200,
        description: 'A festival celebrating local food and culture.'
    }
];

// http://localhost:3000/
app.get('/', (req, res) => {
    // const ids = events.map(e => e.id).join('\n');
    let x = "";

    events.forEach(e => {
        x += `<h1>${e.id}</h1>`
    });
    res.send(x);
});

// http://localhost:3000/event/xxxx
app.get('/event/:id', (req, res) => {
    const eventId = parseInt(req.params.id, 10);  // Use req.params instead of req.query
    const event = events.find(e => e.id === eventId);

    if (event) {
        res.json(event);
    } else {
        res.status(404).json({ message: 'Event not found' });
    }
});

app.get('/events', (req, res) => {
    res.json(events);
});

// http://localhost:3000/event
/*
    Do not pass id, it will be generated by itself
    {
        "title": "Title",
        "time": "2024-10-05T14:00:00Z",
        "owner": "User",
        "limit": "1",
        "description": "Some cool event."
    }
*/
app.post('/event', [
    body('title').isString().notEmpty(),
    body('time').isISO8601(),
    body('owner').isString().notEmpty(),
    body('limit').isInt({ min: 1 }),
    body('description').isString().notEmpty()
], (req, res) => {
    const errors = validationResult(req);
    if (!errors.isEmpty()) {
        return res.status(400).json({ errors: errors.array() });
    }

    const { title, time, owner, limit, description } = req.body;
    const newEvent = { id: generateRandomId(), title, time, owner, limit, description };
    events.push(newEvent);
    res.status(201).json(newEvent);
});


//http://localhost:3000/event/xxxx
/*
    {
        "title": "Title",
        "time": "2024-10-05T14:00:00Z",
        "owner": "User",
        "limit": "1",
        "description": "Some cool event."
    }
*/
app.put('/event/:id', [
    body('title').isString().notEmpty(),
    body('time').isISO8601(),
    body('owner').isString().notEmpty(),
    body('limit').isInt({ min: 1 }),
    body('description').isString().notEmpty()
], (req, res) => {
    const eventId = parseInt(req.params.id, 10);
    const index = events.findIndex(e => e.id === eventId);

    if (index === -1) {
        return res.status(404).json({ message: 'Event not found' });
    }

    const errors = validationResult(req);
    if (!errors.isEmpty()) {
        return res.status(400).json({ errors: errors.array() });
    }

    const { title, time, owner, limit, description } = req.body;
    events[index] = { id: eventId, title, time, owner, limit, description };
    res.json(events[index]);
});

// http://localhost:3000/event/xxxx
app.delete('/event/:id', (req, res) => {
    const eventId = parseInt(req.params.id, 10);
    const index = events.findIndex(e => e.id === eventId);

    if (index === -1) {
        return res.status(404).json({ message: 'Event not found' });
    }

    events.splice(index, 1);
    res.status(204).send();
});

// Start the server
app.listen(port, () => {
    console.log(`Server running at http://localhost:${port}`);
});
